

singleton = static instance of class 
don't allow user to create default constructor 
create a static method 




Hibernate = this is an orm tool / JPA - this a specification (set of rule )

to perform any operation with database from java application we can do it by hibernate but for this we need 

Session -> session factory ()-> configuration (data source config ) u have to do it in config.xml

save , get 

in every save,update and delete  method we have to do session.beginTranscation(), session.getTranscation.commit()






Cursor-----

we need to retrive the object one by one 

3 types

Enumration - to get object from old collection object , Enumration e=v.elements(); /// Only read access
iterator - read and remove data // read and remove 
list iterator - bi directional / object creation = public ListIterator listIterator() //read , remove,replace , addition of new object 

Set -----
--------------------------
doesn't contain any method it extends all the collection interface method

HashSet====
----------------------------------------------
. Uderlying DS is Hashtable
. if frequent opration is search operation then go for it
. Insertion is not preserve

 Linked HashSet:-
 ===============================
Uderlying DS Hashtable+linkedlist
.duplicate not allow and insertion order is preserve 


SortedSet -:
=======================
represet group of individual object where don't want duplicate data and some sorting order must be there 


TreeSet :-
=========================
Balanced Tree  underlying DS
duplicate not allow , insertion order not preserve 
Heterogenious object not allow (Tree set and Tree Map)
Null Acceptance allow but only once / for empty treeset first element null insertion is possible . after inserting that , if try to insert other element will get null pointer exception 

TreeSet t= new TreeSet() = DNSO
TreeSet t =new TreeSet(Comparator c) ; cutomized sorting order 


comparable ----
------------

present on java.lang package / one method compareto
obj1.compareto(obj2); obj1- element we are trying to insert and obj2 is the element is already inserted 
obj1>obj2 = +ve
obj1<obj2 =-ve
obj1==obj2 = 0

Comparator --
-------------

present on java.util package 
customize sorting order /contains 2 method compare and equal , when we are implementing comparator interface must be override compare method , equal method is optional 


Interface and Abstract class

1. When we don't know about full implmeatation we go for interface / when we know partial implementation go for abstract 
2. interface is fully abstract class because only abstract method allow / we can write both concert and abstract method 
3. all the methods are public and abstract / abstract class here is no specificatio 
4. in interface variable can be final public static / abstract class does n't have this type of specification
5. when we are declare a variable should intialize same time / abstract class this type specification not there 
6. we can't have static block here / here we have 


Map===========
-----------------------

Represent group of individual object in key value pair , both key and value both are object , key can't be duplicate , value can be duplicate 
Each key value pair called - Entry --- Hence map is considered as a collection of entry objecs 
Map Interface methods - object  put(object key , object value )
---- to add 1 key value pair to map , if the key is already present then old value will be repalced with new value and returns old value 
eg . map.put(101,"Sunit");
     map.put(102,"Kumar");
	 map.put(101,"Pattnaik")
	 then sunit will be replaced by pattnaik 
	 
-------------------------------------------------------------------
set keyset()
collection values()
set entryset()
these 3 method consider as collection view map 
-------------------------------------------------------------------------
Entry (I)
============
without existing map object , there is no chance of existing entry object , hence entry (I) is defined inside map interface 

object getkey();
object getvalue();
object setvalue(object o)
these 3 methods are entry specific method , we can apply on entry object 

HashMap
================

-- Underlying DS is HashTable , Insertion order is not preserved and it is bases on  hashcode of keys , Duplicate keys are not allowed , value can be duplicated 
-- Heterogenous object are allowed for both key and value , null allowed for key (once ) null allowed for value (any)
-- hashmap implements seralizable and cloneable inteface , but not random access 
-- hashmap is best choice if operation is search operation 

HashMap m = new HashMap() // creates an empty hashmap object with default intial capacity 16 and fill ratio is 0.75
HashMap m =new HashMap(int intialcapacity) - creates an empty hashmap object with specified intial capacity and default fill ratio 0.75
Hahmap m =new HashMap(int intialcapcity,float fill ratio)
HashMap m =new hashmap(Map m)


Differnce Between HashMap and HashTable ====
=========================================================================

1--HashMap method are not syncronized and Hastable is Syncronized 
2--Hashmap is multi threaded  so no thread safe / Hashtable is Single Thread and Thread safe 
3--HashMap is performance wise fast / Hastable performance wise slow
4-- Null value are allow / null are not allow
5-- HashMap came in 1.2 v / Hastable came on 1.0 v so it is legacy 

Linked HashMap============
===================================================================
1-uderlying Ds linkedlist+Hastable  / Child class of HashMap
2- insertion order is preserve
3- introduce in 1.4 v 


== & .equal()--
================================
1- == meant for refernce and address comparison / equal () content comparison 

IdentityHashMap===============
=====================================================================
Hashmap use .equal() to identityfy duplicate key 
- but identityhashmap jvm will use == operator to identityfy duplicate key 

WeakHashMap--------
===============================
- It is exactly same as hashmap except the following differnce 
-- In the case of hashmap even though object doesn't have any refernce it is not eligble for GC , if it is associated with HashMap i.e HashMap dominates GC 
-- But in the case of WeakHashMap if object doesnt contain any refernces it is eligble for GC even though object associated with weak hashmap , i.e gc dominates WeakHashMap

sorted map---
--------------
if we want to represent group of key and value pair according to some sorting order of keys then we should go for sorted map 

Navigable MaP
------------------
child interface of sorted map , define some util method for navigation 